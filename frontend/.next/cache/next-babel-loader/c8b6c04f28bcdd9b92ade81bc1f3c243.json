{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/horse/Desktop/sites/wesbos/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/horse/Desktop/sites/wesbos/sick-fits/frontend/pages/order/[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ORDER_QUERY($id: ID!) {\\n        order: Order(where: {id: $id}) {\\n            id\\n            charge\\n            total\\n            user {\\n                id\\n            }\\n            items {\\n                id\\n                name\\n                description\\n                price\\n                quantity\\n                photo {\\n                    image {\\n                        publicUrlTransformed\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport Head from 'next/head';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SingleOrderPage, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick Fits - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleOrderPage, \"Z+0LgrSWpTZsLds+tjQq9+67f1U=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrderPage\");","map":{"version":3,"sources":["/Users/horse/Desktop/sites/wesbos/sick-fits/frontend/pages/order/[id].js"],"names":["useQuery","gql","ErrorMessage","OrderStyles","Head","SINGLE_ORDER_QUERY","SingleOrderPage","query","variables","id","data","error","loading","order"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;AAyBA,eAAe,SAASK,eAAT,OAAiC;AAAA;;AAAA,MAAPC,KAAO,QAAPA,KAAO;;AAAA,kBACbP,QAAQ,CAACM,eAAD,EAAkB;AACrDE,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAX;AAD0C,GAAlB,CADK;AAAA,MACrCC,IADqC,aACrCA,IADqC;AAAA,MAC/BC,KAD+B,aAC/BA,KAD+B;AAAA,MACxBC,OADwB,aACxBA,OADwB;;AAI5C,MAAGA,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AALiC,MAMrCE,KANqC,GAM5BH,IAN4B,CAMrCG,KANqC;AAO5C,sBACI,QAAC,WAAD;AAAA,4BACA,QAAC,IAAD;AAAA,6BAAM;AAAA,mCAAoBA,KAAK,CAACJ,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOI,KAAK,CAACJ;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAhBuBH,e;UACWN,Q;;;KADXM,e","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport OrderStyles from '../../components/styles/OrderStyles';\nimport Head from 'next/head';\n\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!) {\n        order: Order(where: {id: $id}) {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo {\n                    image {\n                        publicUrlTransformed\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default function SingleOrderPage({query}){\n    const {data, error, loading} = useQuery(SingleOrderPage, {\n        variables: {id: query.id},\n    })\n    if(loading) return <p>Loading....</p>;\n    if (error) return <ErrorMessage error={error} /> ;\n    const {order} = data;\n    return (\n        <OrderStyles>\n        <Head><title>Sick Fits - {order.id}</title></Head>\n        <p>\n            <span>Order Id:</span>\n            <span>{order.id}</span>\n        </p>\n            </OrderStyles>\n    )\n}"]},"metadata":{},"sourceType":"module"}
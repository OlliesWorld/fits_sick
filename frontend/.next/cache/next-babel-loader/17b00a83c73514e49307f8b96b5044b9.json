{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/horse/Desktop/sites/sick_fits/frontend/components/Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nimport Product from './Product';\nexport const ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n        allProducts(first: $first, skip: $skip){\n            id\n            name\n            price\n            description\n            photo {\n                id\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n\n`;\nconst ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\nexport default function Products({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }); // console.log(data, error, loading)\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n      children: data === null || data === void 0 ? void 0 : data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/horse/Desktop/sites/sick_fits/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","Product","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","page","data","error","loading","variables","skip","first","message","allProducts","map","product","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,GAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBO;AAkBP,MAAMK,kBAAkB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,iEAAxB;AAMA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AACrC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBZ,QAAQ,CAACK,kBAAD,EAAoB;AACvDQ,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEL,IAAI,GAAGN,OAAP,GAAiBA,OADhB;AAEPY,MAAAA,KAAK,EAAEZ;AAFA;AAD4C,GAApB,CAAvC,CADqC,CAOrC;;AACA,MAAGS,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGD,KAAH,EAAU,oBAAO;AAAA,0BAAWA,KAAK,CAACK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACV,sBACI;AAAA,2BACA,QAAC,kBAAD;AAAA,gBACKN,IADL,aACKA,IADL,uBACKA,IAAI,CAAEO,WAAN,CAAkBC,GAAlB,CAAuBC,OAAD,iBACvB,QAAC,OAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nimport Product from './Product';\n\nexport const ALL_PRODUCTS_QUERY = gql `\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n        allProducts(first: $first, skip: $skip){\n            id\n            name\n            price\n            description\n            photo {\n                id\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n\n`;\n\nconst ProductsListStyles = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n`;\n\nexport default function Products({page}) {\n    const {data, error, loading} = useQuery(ALL_PRODUCTS_QUERY,{\n        variables: {\n            skip: page * perPage - perPage,\n            first: perPage,\n        }\n    });\n    // console.log(data, error, loading)\n    if(loading) return <p>Loading...</p>\n    if(error) return <p>Error: {error.message}</p>\n    return (\n        <div>\n        <ProductsListStyles>\n            {data?.allProducts.map((product) => (\n            <Product key={product.id} product={product}/>\n            ))}\n        </ProductsListStyles>\n    </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}
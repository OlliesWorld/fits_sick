{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/horse/Desktop/sites/wesbos/sick-fits/frontend/pages/orders.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderItemStyles from '../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../lib/formatMoney';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nconst USER_ORDERS_QUERY = gql`\n    query USER_ORDERS_QUERY{\n        allOrders {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo {\n                    image {\n                        publicUrlTransformed\n                    }\n                }\n            }\n        }\n    }\n`;\nconst OrderUl = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    grid-gap: 4rem;\n \n `;\n\nfunction countItemsInOrder(order) {\n  return order.items.reduce((tally, item) => tally + item.quantity, 0);\n}\n\nexport default function OrdersPage() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  const {\n    allOrders\n  } = data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick Fits - Your (\", allOrders.length, \") Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders.length, \" orders! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: allOrders.map(order => /*#__PURE__*/_jsxDEV(OrderItemStyles, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/order/${order.id}`,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [countItemsInOrder(order), \" Items\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Product\", order.items.length === 1 ? '' : 's', \" \", order.items.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatMoney(order.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"images\",\n              children: order.items.map(item => {\n                var _item$photo, _item$photo$image;\n\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_item$photo = item.photo) === null || _item$photo === void 0 ? void 0 : (_item$photo$image = _item$photo.image) === null || _item$photo$image === void 0 ? void 0 : _item$photo$image.publicUrlTransformed,\n                  alt: item.name\n                }, `image-${item.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/horse/Desktop/sites/wesbos/sick-fits/frontend/pages/orders.js"],"names":["useQuery","gql","ErrorMessage","OrderItemStyles","Head","formatMoney","styled","Link","USER_ORDERS_QUERY","OrderUl","ul","countItemsInOrder","order","items","reduce","tally","item","quantity","OrdersPage","data","error","loading","allOrders","length","map","id","total","photo","image","publicUrlTransformed","name"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderItemStyles from '../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../lib/formatMoney';\nimport styled from 'styled-components';\nimport Link from 'next/link';\n\nconst USER_ORDERS_QUERY = gql`\n    query USER_ORDERS_QUERY{\n        allOrders {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo {\n                    image {\n                        publicUrlTransformed\n                    }\n                }\n            }\n        }\n    }\n`;\n const OrderUl = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    grid-gap: 4rem;\n \n `\n function countItemsInOrder(order){\n     return order.items.reduce((tally, item) => tally + item.quantity, 0);\n }\nexport default function OrdersPage(){\n    const {data, error, loading} = useQuery(USER_ORDERS_QUERY);\n    if(loading) return <p>Loading....</p>;\n    if (error) return <ErrorMessage error={error} /> ;\n    const {allOrders} = data;\n    return (\n        <>\n        <Head><title>Sick Fits - Your ({allOrders.length}) Orders</title></Head>\n      <h2>You have {allOrders.length} orders! </h2>\n        <OrderUl>\n            {allOrders.map(order => <OrderItemStyles>\n                <Link href={`/order/${order.id}`}>\n                    <>\n                    <div className=\"order-meta\">\n                        <p>{countItemsInOrder(order)} Items</p>\n                        <p>Product{order.items.length === 1 ? '' : 's'} {order.items.length}</p>\n                        <p>{formatMoney(order.total)}</p>\n                    </div>\n                    <div className=\"images\">\n                        {order.items.map(item =>\n                        ( <img key={`image-${item.id}`}\n                        src={item.photo?.image?.publicUrlTransformed}\n                        alt={item.name} />\n                        ))}\n                    </div>\n                    </>\n                </Link>\n            </OrderItemStyles>)}\n        \n\n            </OrderUl>\n            </>\n    )\n}"]},"metadata":{},"sourceType":"module"}
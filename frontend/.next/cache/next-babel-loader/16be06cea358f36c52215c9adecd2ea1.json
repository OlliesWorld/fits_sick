{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/horse/Desktop/sites/wesbos/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/horse/Desktop/sites/wesbos/sick-fits/frontend/pages/orders.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\\n    grid-gap: 4rem;\\n \\n \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query USER_ORDERS_QUERY{\\n        allOrders {\\n            id\\n            charge\\n            total\\n            user {\\n                id\\n            }\\n            items {\\n                id\\n                name\\n                description\\n                price\\n                quantity\\n                photo {\\n                    image {\\n                        publicUrlTransformed\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderItemStyles from '../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../lib/formatMoney';\nimport styled from 'styled-components';\nvar USER_ORDERS_QUERY = gql(_templateObject());\nvar OrderUl = styled.ul(_templateObject2());\n_c = OrderUl;\nexport default function OrdersPage() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(USER_ORDERS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  var allOrders = data.allOrders;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sick Fits - All Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", allOrders.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: allOrders.map(function (order) {\n        return /*#__PURE__*/_jsxDEV(OrderItemStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OrdersPage, \"Z+0LgrSWpTZsLds+tjQq9+67f1U=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = OrdersPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderUl\");\n$RefreshReg$(_c2, \"OrdersPage\");","map":{"version":3,"sources":["/Users/horse/Desktop/sites/wesbos/sick-fits/frontend/pages/orders.js"],"names":["useQuery","gql","ErrorMessage","OrderItemStyles","Head","formatMoney","styled","USER_ORDERS_QUERY","OrderUl","ul","OrdersPage","data","error","loading","allOrders","length","map","order"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,iBAAiB,GAAGN,GAAH,mBAAvB;AAwBC,IAAMO,OAAO,GAAGF,MAAM,CAACG,EAAV,oBAAb;KAAMD,O;AAMP,eAAe,SAASE,UAAT,GAAqB;AAAA;;AAAA;;AAAA,kBACDV,QAAQ,CAACO,iBAAD,CADP;AAAA,MACzBI,IADyB,aACzBA,IADyB;AAAA,MACnBC,KADmB,aACnBA,KADmB;AAAA,MACZC,OADY,aACZA,OADY;;AAEhC,MAAGA,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAHqB,MAIzBE,SAJyB,GAIZH,IAJY,CAIzBG,SAJyB;AAKhC,sBACI;AAAA,4BACA,QAAC,IAAD;AAAA,6BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,YADA,eAEF;AAAA,sBAAMA,SAAS,CAACC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFE,eAIA,QAAC,OAAD;AAAA,gBACKD,SAAS,CAACE,GAAV,CAAc,UAAAC,KAAK;AAAA,4BAAI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,iBAAJ;AAAA,OAAnB;AADL;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAaH;;GAlBuBP,U;UACWV,Q;;;MADXU,U","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderItemStyles from '../components/styles/OrderStyles';\nimport Head from 'next/head';\nimport formatMoney from '../lib/formatMoney';\nimport styled from 'styled-components';\n\nconst USER_ORDERS_QUERY = gql`\n    query USER_ORDERS_QUERY{\n        allOrders {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo {\n                    image {\n                        publicUrlTransformed\n                    }\n                }\n            }\n        }\n    }\n`;\n const OrderUl = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    grid-gap: 4rem;\n \n `\nexport default function OrdersPage(){\n    const {data, error, loading} = useQuery(USER_ORDERS_QUERY);\n    if(loading) return <p>Loading....</p>;\n    if (error) return <ErrorMessage error={error} /> ;\n    const {allOrders} = data;\n    return (\n        <>\n        <Head><title>Sick Fits - All Orders</title></Head>\n      <h2> {allOrders.length}\n        </h2>\n        <OrderUl>\n            {allOrders.map(order => <OrderItemStyles>\n            </OrderItemStyles>)}\n        \n\n            </OrderUl>\n            </>\n    )\n}"]},"metadata":{},"sourceType":"module"}